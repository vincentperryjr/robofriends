{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","Cardlist","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAK,wBAA0BF,EAAK,yBAA0BG,IAAI,WACvE,sBAAKF,UAAU,KAAf,UACE,6BAAKH,IACL,4BAAIC,WCcGK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKFC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,cACZC,SAAUH,OCCHI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,aC2CEC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRoB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKT,SAAU,CAACnB,OAAQ4B,S,oBAO9B,WAAW,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC9C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAElE,OAAgC,IAA5BH,KAAKP,MAAMvB,OAAOmC,OACb,yCAGL,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAlCZO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.9c250959.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ( {name, email, id} ) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow ba bw2 shadow-5\">\n      <img src={'https://robohash.org/' + id + '?set=set4&size=300x300'} alt=\"robots\"/>\n      <div className='tc'>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ( {robots} ) => {\n  return (\n    <div>\n      {\n        robots.map((user, i) => {\n          return (\n            <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n            />\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default Cardlist;\n","import React from 'react';\n\nconst Searchbox = ( {searchChange} ) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder='search cats'\n        onChange={searchChange}\n      />\n    </div>\n  )\n}\n\nexport default Searchbox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n  return (\n    <div style={{ overflowY: 'scroll', border: '1px solid black', height: '500px' }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\nimport Cardlist from '../components/Cardlist';\nimport Searchbox from '../components/Searchbox';\nimport \"./App.css\";\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        return response.json();\n      })\n      .then(users => {\n        this.setState( {robots: users})\n      });\n}\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render () {\n    const filteredRobots = this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n    if (this.state.robots.length ===0) {\n      return <h1>LOADING</h1>\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <Searchbox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <Cardlist robots={filteredRobots}/>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}